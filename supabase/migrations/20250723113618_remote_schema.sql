create schema if not exists "kintai_user_profile";


create type "public"."work_type" as enum ('fixed', 'flex', 'super-flex');

create table "public"."kintai_profile" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "edited_at" timestamp without time zone default now(),
    "uid" uuid default auth.uid(),
    "family_name" text,
    "given_name" text,
    "work_type" work_type default 'fixed'::work_type
);


alter table "public"."kintai_profile" enable row level security;

create table "public"."kintai_start_end" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "is_start" boolean,
    "uid" uuid
);


alter table "public"."kintai_start_end" enable row level security;

CREATE UNIQUE INDEX kintai_profile_pkey ON public.kintai_profile USING btree (id);

CREATE UNIQUE INDEX kintai_profile_uid_key ON public.kintai_profile USING btree (uid);

CREATE UNIQUE INDEX kintai_start_end_pkey ON public.kintai_start_end USING btree (id);

alter table "public"."kintai_profile" add constraint "kintai_profile_pkey" PRIMARY KEY using index "kintai_profile_pkey";

alter table "public"."kintai_start_end" add constraint "kintai_start_end_pkey" PRIMARY KEY using index "kintai_start_end_pkey";

alter table "public"."kintai_profile" add constraint "kintai_profile_uid_fkey" FOREIGN KEY (uid) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."kintai_profile" validate constraint "kintai_profile_uid_fkey";

alter table "public"."kintai_profile" add constraint "kintai_profile_uid_key" UNIQUE using index "kintai_profile_uid_key";

alter table "public"."kintai_start_end" add constraint "kintai_start_end_uid_fkey" FOREIGN KEY (uid) REFERENCES auth.users(id) not valid;

alter table "public"."kintai_start_end" validate constraint "kintai_start_end_uid_fkey";

grant delete on table "public"."kintai_profile" to "anon";

grant insert on table "public"."kintai_profile" to "anon";

grant references on table "public"."kintai_profile" to "anon";

grant select on table "public"."kintai_profile" to "anon";

grant trigger on table "public"."kintai_profile" to "anon";

grant truncate on table "public"."kintai_profile" to "anon";

grant update on table "public"."kintai_profile" to "anon";

grant delete on table "public"."kintai_profile" to "authenticated";

grant insert on table "public"."kintai_profile" to "authenticated";

grant references on table "public"."kintai_profile" to "authenticated";

grant select on table "public"."kintai_profile" to "authenticated";

grant trigger on table "public"."kintai_profile" to "authenticated";

grant truncate on table "public"."kintai_profile" to "authenticated";

grant update on table "public"."kintai_profile" to "authenticated";

grant delete on table "public"."kintai_profile" to "service_role";

grant insert on table "public"."kintai_profile" to "service_role";

grant references on table "public"."kintai_profile" to "service_role";

grant select on table "public"."kintai_profile" to "service_role";

grant trigger on table "public"."kintai_profile" to "service_role";

grant truncate on table "public"."kintai_profile" to "service_role";

grant update on table "public"."kintai_profile" to "service_role";

grant delete on table "public"."kintai_start_end" to "anon";

grant insert on table "public"."kintai_start_end" to "anon";

grant references on table "public"."kintai_start_end" to "anon";

grant select on table "public"."kintai_start_end" to "anon";

grant trigger on table "public"."kintai_start_end" to "anon";

grant truncate on table "public"."kintai_start_end" to "anon";

grant update on table "public"."kintai_start_end" to "anon";

grant delete on table "public"."kintai_start_end" to "authenticated";

grant insert on table "public"."kintai_start_end" to "authenticated";

grant references on table "public"."kintai_start_end" to "authenticated";

grant select on table "public"."kintai_start_end" to "authenticated";

grant trigger on table "public"."kintai_start_end" to "authenticated";

grant truncate on table "public"."kintai_start_end" to "authenticated";

grant update on table "public"."kintai_start_end" to "authenticated";

grant delete on table "public"."kintai_start_end" to "service_role";

grant insert on table "public"."kintai_start_end" to "service_role";

grant references on table "public"."kintai_start_end" to "service_role";

grant select on table "public"."kintai_start_end" to "service_role";

grant trigger on table "public"."kintai_start_end" to "service_role";

grant truncate on table "public"."kintai_start_end" to "service_role";

grant update on table "public"."kintai_start_end" to "service_role";

create policy "Enable delete for users based on user_id"
on "public"."kintai_profile"
as permissive
for select
to public
using ((( SELECT auth.uid() AS uid) = uid));


create policy "Enable insert for authenticated users only"
on "public"."kintai_profile"
as permissive
for insert
to authenticated
with check (true);


create policy " start_end"
on "public"."kintai_start_end"
as permissive
for select
to public
using (true);


create policy "start_end"
on "public"."kintai_start_end"
as permissive
for insert
to public
with check (true);



